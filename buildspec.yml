version: 0.2

env:
    AWS_ECS: 109412806537.dkr.ecr.ap-northeast-2.amazonaws.com
    IMAGE_REPO_NAME: ecs-pipe-repo
    CONTAINER_NAME: ecs-pipe-container

phases:
  pre_build: #빌드 전에 할 행동
    commands:
      - echo Pre-build completed
      # ECR 로그인
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $AWS_ECS
  build: # 빌드 명령
    commands:
    # 도커 이미지 빌드, 빌드 넘버를 태그 값으로 사용
      - IMAGE_TAG=$CODEBUILD_BUILD_NUMBER
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ECR/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ECR/$IMAGE_REPO_NAME:latest
  post_build:
    # 도커 이미지 푸시
    # json 형태로 이미지를 지정하는 파일 생성
    commands:
      - docker push $AWS_ECR/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ECR/$IMAGE_REPO_NAME:latest
      # 이미지에 대한 정보 json에 저장
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $AWS_ECR/$IMAGE_REPO_NAME:$IMAGE_TAG > image-definition.json

artifacts: 
  files: # 빌드후에 배포단계로 옮길 파일들.
    # 이미지 정보가 담겨있는 json 파일을 아티팩트로 옮겨줌
    - image-definition.json
